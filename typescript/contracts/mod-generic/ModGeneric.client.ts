/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { CosmWasmClient } from "@cosmjs/cosmwasm-stargate";
import { InstantiateMsg, ExecuteMsg, QueryMsg, Binary, ValueOrdering, ValueIndex, PathToValue, GenericQuery, QueryResponseForBinary } from "./ModGeneric.types";
export interface ModGenericReadOnlyInterface {
  contractAddress: string;
  genericQuery: ({
    contractAddr,
    msg,
    ordering,
    pathToValue,
    value
  }: {
    contractAddr: string;
    msg: Binary;
    ordering: ValueOrdering;
    pathToValue: PathToValue;
    value: Binary;
  }) => Promise<QueryResponseForBinary>;
}
export class ModGenericQueryClient implements ModGenericReadOnlyInterface {
  client: CosmWasmClient;
  contractAddress: string;

  constructor(client: CosmWasmClient, contractAddress: string) {
    this.client = client;
    this.contractAddress = contractAddress;
    this.genericQuery = this.genericQuery.bind(this);
  }

  genericQuery = async ({
    contractAddr,
    msg,
    ordering,
    pathToValue,
    value
  }: {
    contractAddr: string;
    msg: Binary;
    ordering: ValueOrdering;
    pathToValue: PathToValue;
    value: Binary;
  }): Promise<QueryResponseForBinary> => {
    return this.client.queryContractSmart(this.contractAddress, {
      generic_query: {
        contract_addr: contractAddr,
        msg,
        ordering,
        path_to_value: pathToValue,
        value
      }
    });
  };
}