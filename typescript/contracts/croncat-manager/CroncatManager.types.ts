/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Addr = string;
export interface InstantiateMsg {
  croncat_agents_key: [string, [number, number]];
  croncat_tasks_key: [string, [number, number]];
  cw20_whitelist?: string[] | null;
  gas_price?: GasPrice | null;
  pause_admin: Addr;
  treasury_addr?: string | null;
  version?: string | null;
}
export interface GasPrice {
  denominator: number;
  gas_adjustment_numerator: number;
  numerator: number;
}
export type ExecuteMsg = {
  update_config: UpdateConfig;
} | {
  proxy_call: {
    task_hash?: string | null;
  };
} | {
  proxy_batch: (string | null)[];
} | {
  proxy_call_forwarded: {
    agent_addr: Addr;
    task_hash?: string | null;
  };
} | {
  refill_task_balance: {
    task_hash: string;
  };
} | {
  refill_task_cw20_balance: {
    cw20: Cw20Coin;
    task_hash: string;
  };
} | {
  receive: Cw20ReceiveMsg;
} | {
  create_task_balance: ManagerCreateTaskBalance;
} | {
  remove_task: ManagerRemoveTask;
} | {
  owner_withdraw: {};
} | {
  user_withdraw: {
    limit?: number | null;
  };
} | {
  agent_withdraw: AgentWithdrawOnRemovalArgs | null;
} | {
  pause_contract: {};
} | {
  unpause_contract: {};
};
export type Uint128 = string;
export type Binary = string;
export interface UpdateConfig {
  agent_fee?: number | null;
  croncat_agents_key?: [string, [number, number]] | null;
  croncat_tasks_key?: [string, [number, number]] | null;
  cw20_whitelist?: string[] | null;
  gas_price?: GasPrice | null;
  treasury_addr?: string | null;
  treasury_fee?: number | null;
}
export interface Cw20Coin {
  address: string;
  amount: Uint128;
}
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export interface ManagerCreateTaskBalance {
  amount_for_one_task: AmountForOneTask;
  cw20?: Cw20CoinVerified | null;
  recurring: boolean;
  sender: Addr;
  task_hash: number[];
}
export interface AmountForOneTask {
  agent_fee: number;
  coin: [Coin | null, Coin | null];
  cw20?: Cw20CoinVerified | null;
  gas: number;
  gas_price: GasPrice;
  treasury_fee: number;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface Cw20CoinVerified {
  address: Addr;
  amount: Uint128;
}
export interface ManagerRemoveTask {
  sender: Addr;
  task_hash: number[];
}
export interface AgentWithdrawOnRemovalArgs {
  agent_id: string;
  payable_account_id: string;
}
export type QueryMsg = {
  config: {};
} | {
  paused: {};
} | {
  treasury_balance: {};
} | {
  users_balances: {
    address: string;
    from_index?: number | null;
    limit?: number | null;
  };
} | {
  task_balance: {
    task_hash: string;
  };
} | {
  agent_rewards: {
    agent_id: string;
  };
};
export interface Config {
  agent_fee: number;
  croncat_agents_key: [string, [number, number]];
  croncat_factory_addr: Addr;
  croncat_tasks_key: [string, [number, number]];
  cw20_whitelist: Addr[];
  gas_price: GasPrice;
  limit: number;
  native_denom: string;
  owner_addr: Addr;
  pause_admin: Addr;
  treasury_addr?: Addr | null;
  treasury_fee: number;
}
export type Boolean = boolean;
export interface TaskBalanceResponse {
  balance?: TaskBalance | null;
}
export interface TaskBalance {
  cw20_balance?: Cw20CoinVerified | null;
  ibc_balance?: Coin | null;
  native_balance: Uint128;
}
export type ArrayOfCw20CoinVerified = Cw20CoinVerified[];